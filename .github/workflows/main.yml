name: Main Workflow

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  node_version: "18"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout âœ…
        uses: actions/checkout@v3

      - name: Setup Node ðŸ¤–
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}
          cache: npm

      - name: Cache node_modules ðŸ”®
        id: cache-modules
        uses: actions/cache@v3
        with:
          path: ./node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies ðŸ“¦
        if: steps.cache-modules.outputs.cache-hit != 'true'
        shell: bash
        run: npm ci

      - name: Cache Astro ðŸš€
        id: cache-astro
        uses: actions/cache@v3
        with:
          path: ./cache
          key: ${{ runner.os }}-cache-astro

      - name: Build site ðŸ”¥
        run: npm run build

      - name: Upload artifact ðŸ“€
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./out

  deploy:
    # Add a dependency to the build job
    needs: build

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
